name: Build docker images

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - cmd/**
      - go.mod
      - go.sum
      - grpc_cosmos_sdk_*.go
      - sdk_utilities.go
      - helm/**

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup matrix combinations
        id: setup-matrix-combinations
        run: |
          MATRIX_PARAMS_COMBINATIONS="$(make versions-json)"
          echo ::set-output name=matrix-combinations::{\"include\":$MATRIX_PARAMS_COMBINATIONS}
    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}

  sdk-service:
    runs-on: ubuntu-latest
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      - name: Get version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: false
          context: .
          file: Dockerfile
          tags: gcr.io/tendermint-dev/emeris-sdk-service:${{ steps.get_version.outputs.version-without-v }},gcr.io/tendermint-dev/emeris-sdk-service:${{ github.sha }}
          build-args: |
            GIT_TOKEN=${{ secrets.TENDERBOT_GIT_TOKEN }}
            SDK_TARGET=${{ matrix.version }}
